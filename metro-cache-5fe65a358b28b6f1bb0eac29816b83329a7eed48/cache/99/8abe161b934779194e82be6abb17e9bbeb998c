__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RkCard = undefined;

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _class,
      _temp,
      _jsxFileName = "/home/flyp/Projetos/ourboxapp/node_modules/react-native-ui-kitten/src/components/card/rkCard.js";

  var _react = require(_dependencyMap[0], "react");

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = require(_dependencyMap[1], "react-native");

  var _rkComponent = require(_dependencyMap[2], "../rkComponent");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var RkCard = exports.RkCard = (_temp = _class = function (_RkComponent) {
    _inherits(RkCard, _RkComponent);

    function RkCard(props) {
      _classCallCheck(this, RkCard);

      var _this = _possibleConstructorReturn(this, (RkCard.__proto__ || Object.getPrototypeOf(RkCard)).call(this, props));

      _this.componentName = 'RkCard';
      _this.typeMapping = {
        container: {},
        header: {},
        content: {},
        footer: {},
        img: {},
        imgOverlay: {}
      };
      return _this;
    }

    _createClass(RkCard, [{
      key: "_process",
      value: function _process(elem, readyStyles) {
        var isCardAttr = function isCardAttr(prop) {
          return prop.startsWith(RkCard.attrName);
        };

        var styles = [];

        for (var prop in elem.props) {
          if (isCardAttr(prop)) {
            styles.push(readyStyles[this._convertAttrToStyle(prop)]);
          }
        }

        if (elem.props) styles.push(elem.props.style);
        return this._copyElement(elem, {
          style: styles
        }, readyStyles);
      }
    }, {
      key: "_copyElement",
      value: function _copyElement(elem, props, readyStyles) {
        var _this2 = this;

        if (typeof elem === 'string') return elem;

        var propsToClone = _extends({}, props);

        if (elem.props && elem.props.children) {
          propsToClone.children = Array.isArray(elem.props.children) ? _react2.default.Children.map(elem.props.children, function (child) {
            return _this2._process(child, readyStyles);
          }) : this._process(elem.props.children, readyStyles);
        }

        return _react2.default.cloneElement(elem, propsToClone);
      }
    }, {
      key: "_convertAttrToStyle",
      value: function _convertAttrToStyle(prop) {
        var name = prop.substring(RkCard.attrName.length);
        return name.charAt(0).toLowerCase() + name.slice(1);
      }
    }, {
      key: "render",
      value: function render() {
        var _defineStyles = this.defineStyles(),
            container = _defineStyles.container,
            definedStyles = _objectWithoutProperties(_defineStyles, ["container"]);

        var _props = this.props,
            style = _props.style,
            viewProps = _objectWithoutProperties(_props, ["style"]);

        return this._process(_react2.default.createElement(
          _reactNative.View,
          _extends({
            rkCardContainer: true,
            style: [container, style]
          }, viewProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 159
            }
          }),
          this.props.children
        ), definedStyles);
      }
    }]);

    return RkCard;
  }(_rkComponent.RkComponent), _class.attrName = 'rkCard', _temp);
});